version: "3.9"
services:
  mqtt:
    build: mqtt_broker
    ports:
      - "1883:1883"
    restart: always
    networks:
      - backend
    volumes:
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log
  database:
      image: influxdb:latest
      ports:
        - "8086:8086"
      restart: always
      volumes:
          - influxdb_volume:/var/lib/influxdb
          - influxdb_volume2:/var/lib/influxdb2
          - influxdb_volume3:/etc/influxdb2
      networks:
        - backend
      environment:
        - DOCKER_INFLUXDB_INIT_MODE=setup
        - DOCKER_INFLUXDB_INIT_USERNAME=admin
        - DOCKER_INFLUXDB_INIT_PASSWORD=password
        - DOCKER_INFLUXDB_INIT_ORG=press_play
        - DOCKER_INFLUXDB_INIT_BUCKET=telegraf_data
        - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=oursecrettoken
  telegraf:
      build: telegraf_instance
      restart: always
      networks:
        - backend
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
    environment:
      TZ: 'Europe/Brussels'
      WEBPASSWORD: 'kobetakesover'
    # Volumes store your data between container upgrades
    volumes:
      - pihole_settings:/etc/pihole/'
      - pihole_dns:/etc/dnsmasq.d/'
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

volumes:
  influxdb_volume:
  influxdb_volume2:
  influxdb_volume3:
  mosquitto_data:
  mosquitto_log:
  pihole_dns:
  pihole_settings:


networks:
  backend:
    driver: bridge

